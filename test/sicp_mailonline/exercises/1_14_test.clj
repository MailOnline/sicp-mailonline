;; Exercise 1.14
;; Draw the tree illustrating the process generated by the count-change
;; procedure of section 1.2.2 in making change for 11 cents.

;; (cc 11 3) = (+ (cc 11 2) (cc 1 3)) = (+ 3 1) = 4

;; (cc 11 2) = (+ (cc 11 1) (cc 6 2)) = (+ 1 2) = 3
;; (cc 1 3) = (+ (cc 1 2) (cc -9 3)) = (+ 1 0) = 1

;; (cc 11 1) = (+ (cc 11 0) (cc 10 1)) = (+ 0 1) = 1
;; (cc 6 2) = (+ (cc 6 1) (cc 1 2)) = (+ 1 1) = 2
;; (cc 1 2) = (+ (cc 1 1) (cc -4 2)) = (+ 1 0) = 1
;; (cc -9 3) = 0

;; (cc 11 0) = 0
;; (cc 10 1) = (+ (cc 10 0) (cc 9 1)) = (+ 0 1) = 1
;; (cc 6 1) = (+ (cc 6 0) (cc 5 1)) = (+ 0 1) = 1
;; (cc 1 2) = 1 [*duplicate*]
;; (cc 1 1) = (+ (cc 1 0) (cc 0 1)) = (+ 0 1) = 1
;; (cc -4 2) = 0

;; (cc 10 0) = 0
;; (cc 9 1) = (+ (cc 9 0) (cc 8 1)) = (+ 0 1) = 1
;; (cc 6 0) = 0
;; (cc 5 1) = (+ (cc 5 0) (cc 4 1)) = (+ 0 1) = 1
;; (cc 1 0) = 0
;; (cc 0 1) = 1

;; (cc 9 0) = 0
;; (cc 8 1) = (+ (cc 8 0) (cc 7 1)) = (+ 0 1) = 1
;; (cc 5 0) = 0
;; (cc 4 1) = (+ (cc 4 0) (cc 3 1)) = (+ 0 1) = 1

;; (cc 8 0) = 0
;; (cc 7 1) = (+ (cc 7 0) (cc 6 1)) = (+ 0 1) = 1
;; (cc 4 0) = 0
;; (cc 3 1) = (+ (cc 3 0) (cc 2 1)) = (+ 0 1) = 1

;; (cc 7 0) = 0
;; (cc 6 1) = 1 [*duplicate*]
;; (cc 3 0) = 0
;; (cc 2 1) = (+ (cc 2 0) (cc 1 1)) = (+ 0 1) = 1

;; (cc 2 0) = 0
;; (cc 1 1) = 1 [*duplicate*]

(ns sicp-mailonline.exercises.1-14-test
  (:require [sicp-mailonline.examples.1-2-2 :refer [count-change]]
            [clojure.test :refer :all]))

(deftest exercise1-14
  (testing "count change"
    (is (= 4
           (count-change 11)))))

;; What are the orders of growth of the space and number of steps used
;; by this process as the amount to be changed increases?

;; space => O(n)
;; steps => O(n^5) where kinds-of-coins=5

;; amount   steps (invocations of cc)
;; 1           11
;; 5           19
;; 10          41
;; 25         249
;; 50       1,571
;; 100     15,499
;; 200    229,589
